/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        vector<vector<int>>ans;
        int idx = 0;
        if(!root)return ans;

        queue<TreeNode*>q;
        q.push(root);
        
        while(!q.empty()){
           
           int s = q.size();
           vector<int>row;

           for(int i = 0 ; i < s ; i++){
             
             TreeNode* node = q.front();
             q.pop();
    

              if(node -> left){
                q.push(node -> left);
              }
              if(node -> right){
                q.push(node -> right);
              }
              row.push_back(node -> val);
           }
           if(idx & 1){
              reverse(row.begin() , row.end());
              ans.push_back(row);
           }else{
           ans.push_back(row);
           }
           idx++;
        }
        return ans;
    }
};
